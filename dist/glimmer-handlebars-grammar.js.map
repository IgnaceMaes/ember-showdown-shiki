{"version":3,"file":"glimmer-handlebars-grammar.js","sources":["../src/glimmer-handlebars-grammar.ts"],"sourcesContent":["/**\n * Taken from the `vsc-ember-syntax` project. Has to be manually updated in case there are changes upstream!\n * @see https://github.com/lifeart/vsc-ember-syntax/blob/master/syntaxes/src/text.html.ember-handlebars.mjs\n */\nexport default {\n  $schema:\n    'https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json',\n  name: 'Glimmer',\n  scopeName: 'text.html.ember-handlebars',\n  fileTypes: ['hbs'],\n  patterns: [\n    {\n      include: '#style',\n    },\n    {\n      include: '#script',\n    },\n    {\n      include: '#glimmer-else-block',\n    },\n    {\n      include: '#glimmer-bools',\n    },\n    {\n      include: '#glimmer-special-block',\n    },\n    {\n      include: '#glimmer-unescaped-expression',\n    },\n    {\n      include: '#glimmer-comment-block',\n    },\n    {\n      include: '#glimmer-comment-inline',\n    },\n    {\n      include: '#glimmer-expression-property',\n    },\n    {\n      include: '#glimmer-control-expression',\n    },\n    {\n      include: '#glimmer-expression',\n    },\n    {\n      include: '#glimmer-block',\n    },\n    {\n      include: '#html-tag',\n    },\n    {\n      include: '#component-tag',\n    },\n    {\n      include: '#html-comment',\n    },\n    {\n      include: '#entities',\n    },\n  ],\n  repository: {\n    'glimmer-component-path': {\n      match: '(::|_|\\\\$|\\\\.)',\n      captures: {\n        1: {\n          name: 'punctuation.definition.tag',\n        },\n      },\n    },\n    'string-double-quoted-handlebars': {\n      name: 'string.quoted.double.ember-handlebars',\n      begin: '\"',\n      beginCaptures: {\n        0: {\n          name: 'punctuation.definition.string.begin.ember-handlebars',\n        },\n      },\n      end: '\"',\n      endCaptures: {\n        0: {\n          name: 'punctuation.definition.string.end.ember-handlebars',\n        },\n      },\n      patterns: [\n        {\n          name: 'constant.character.escape.ember-handlebars',\n          match: '\\\\\\\\\"',\n        },\n      ],\n    },\n    'string-single-quoted-handlebars': {\n      name: 'string.quoted.single.ember-handlebars',\n      begin: \"'\",\n      beginCaptures: {\n        0: {\n          name: 'punctuation.definition.string.begin.ember-handlebars',\n        },\n      },\n      end: \"'\",\n      endCaptures: {\n        0: {\n          name: 'punctuation.definition.string.end.ember-handlebars',\n        },\n      },\n      patterns: [\n        {\n          name: 'constant.character.escape.ember-handlebars',\n          match: \"\\\\\\\\'\",\n        },\n      ],\n    },\n    'string-double-quoted-html': {\n      name: 'string.quoted.double.html.ember-handlebars',\n      begin: '\"',\n      beginCaptures: {\n        0: {\n          name: 'punctuation.definition.string.begin.ember-handlebars',\n        },\n      },\n      end: '\"',\n      endCaptures: {\n        0: {\n          name: 'punctuation.definition.string.end.ember-handlebars',\n        },\n      },\n      patterns: [\n        {\n          name: 'constant.character.escape.ember-handlebars',\n          match: '\\\\\\\\\"',\n        },\n        {\n          include: '#glimmer-bools',\n        },\n        {\n          include: '#glimmer-expression-property',\n        },\n        {\n          include: '#glimmer-control-expression',\n        },\n        {\n          include: '#glimmer-expression',\n        },\n        {\n          include: '#glimmer-block',\n        },\n      ],\n    },\n    'string-single-quoted-html': {\n      name: 'string.quoted.single.html.ember-handlebars',\n      begin: \"'\",\n      beginCaptures: {\n        0: {\n          name: 'punctuation.definition.string.begin.ember-handlebars',\n        },\n      },\n      end: \"'\",\n      endCaptures: {\n        0: {\n          name: 'punctuation.definition.string.end.ember-handlebars',\n        },\n      },\n      patterns: [\n        {\n          name: 'constant.character.escape.ember-handlebars',\n          match: \"\\\\\\\\'\",\n        },\n        {\n          include: '#glimmer-bools',\n        },\n        {\n          include: '#glimmer-expression-property',\n        },\n        {\n          include: '#glimmer-control-expression',\n        },\n        {\n          include: '#glimmer-expression',\n        },\n        {\n          include: '#glimmer-block',\n        },\n      ],\n    },\n    boolean: {\n      match: 'true|false|undefined|null',\n      captures: {\n        0: {\n          name: 'string.regexp',\n        },\n        1: {\n          name: 'string.regexp',\n        },\n        2: {\n          name: 'string.regexp',\n        },\n      },\n      patterns: [],\n    },\n    digit: {\n      match: '\\\\d*(\\\\.)?\\\\d+',\n      captures: {\n        0: {\n          name: 'constant.numeric',\n        },\n        1: {\n          name: 'constant.numeric',\n        },\n        2: {\n          name: 'constant.numeric',\n        },\n      },\n      patterns: [],\n    },\n    param: {\n      match: '(@|this.)([a-zA-Z0-9_.-]+)',\n      captures: {\n        0: {\n          name: 'support.function',\n          patterns: [\n            {\n              name: 'variable.language',\n              match: '(@|this)',\n            },\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\.)+',\n            },\n          ],\n        },\n        1: {\n          name: 'support.function',\n          patterns: [\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\.)+',\n            },\n          ],\n        },\n      },\n      patterns: [],\n    },\n    attention: {\n      name: 'storage.type.class.${1:/downcase}',\n      match:\n        '@?(TODO|FIXME|CHANGED|XXX|IDEA|HACK|NOTE|REVIEW|NB|BUG|QUESTION|TEMP)\\\\b',\n      patterns: [],\n    },\n    'glimmer-unescaped-expression': {\n      name: 'entity.unescaped.expression.ember-handlebars',\n      begin: '{{{',\n      end: '}}}',\n      captures: {\n        0: {\n          name: 'keyword.operator',\n        },\n      },\n      patterns: [\n        {\n          include: '#string-single-quoted-handlebars',\n        },\n        {\n          include: '#string-double-quoted-handlebars',\n        },\n        {\n          include: '#glimmer-subexp',\n        },\n        {\n          include: '#param',\n        },\n      ],\n    },\n    'glimmer-comment-block': {\n      name: 'comment.block.glimmer',\n      begin: '{{!--',\n      end: '--}}',\n      captures: {\n        0: {\n          name: 'punctuation.definition.block.comment.glimmer',\n        },\n      },\n      patterns: [\n        {\n          include: '#script',\n        },\n        {\n          include: '#attention',\n        },\n      ],\n    },\n    'glimmer-comment-inline': {\n      name: 'comment.inline.glimmer',\n      begin: '{{!',\n      end: '}}',\n      captures: {\n        0: {\n          name: 'punctuation.definition.block.comment.glimmer',\n        },\n      },\n      patterns: [\n        {\n          include: '#script',\n        },\n        {\n          include: '#attention',\n        },\n      ],\n    },\n    'glimmer-bools': {\n      name: 'entity.expression.ember-handlebars',\n      match: '({{~?)(true|false|null|undefined|\\\\d*(\\\\.)?\\\\d+)(~?}})',\n      captures: {\n        0: {\n          name: 'keyword.operator',\n        },\n        1: {\n          name: 'keyword.operator',\n        },\n        2: {\n          name: 'string.regexp',\n        },\n        3: {\n          name: 'string.regexp',\n        },\n        4: {\n          name: 'keyword.operator',\n        },\n      },\n    },\n    'glimmer-else-block': {\n      name: 'entity.expression.ember-handlebars',\n      match: '({{~?)(else\\\\s[a-z]+\\\\s|else)([()@a-zA-Z0-9\\\\.\\\\s\\\\b]+)?(~?}})',\n      captures: {\n        0: {\n          name: 'punctuation.definition.tag',\n        },\n        1: {\n          name: 'punctuation.definition.tag',\n        },\n        2: {\n          name: 'keyword.control',\n        },\n        3: {\n          name: 'keyword.control',\n          patterns: [\n            {\n              include: '#glimmer-subexp',\n            },\n            {\n              include: '#string-single-quoted-handlebars',\n            },\n            {\n              include: '#string-double-quoted-handlebars',\n            },\n            {\n              include: '#boolean',\n            },\n            {\n              include: '#digit',\n            },\n            {\n              include: '#param',\n            },\n            {\n              include: '#glimmer-parameter-name',\n            },\n            {\n              include: '#glimmer-parameter-value',\n            },\n          ],\n        },\n        4: {\n          name: 'punctuation.definition.tag',\n        },\n      },\n    },\n    'glimmer-special-block': {\n      name: 'entity.expression.ember-handlebars',\n      match: '({{~?)(yield|outlet)(~?}})',\n      captures: {\n        0: {\n          name: 'keyword.operator',\n        },\n        1: {\n          name: 'keyword.operator',\n        },\n        2: {\n          name: 'keyword.control',\n        },\n        3: {\n          name: 'keyword.operator',\n        },\n      },\n    },\n    'glimmer-as-stuff': {\n      patterns: [\n        {\n          include: '#as-keyword',\n        },\n        {\n          include: '#as-params',\n        },\n      ],\n    },\n    'glimmer-block': {\n      name: 'entity.expression.ember-handlebars',\n      begin: '({{~?)(#|/)(([@\\\\$a-zA-Z0-9_/.-]+))',\n      end: '(~?}})',\n      captures: {\n        1: {\n          name: 'punctuation.definition.tag',\n        },\n        2: {\n          name: 'punctuation.definition.tag',\n        },\n        3: {\n          name: 'keyword.control',\n          patterns: [\n            {\n              include: '#glimmer-component-path',\n            },\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\/)+',\n            },\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\.)+',\n            },\n          ],\n        },\n      },\n      patterns: [\n        {\n          include: '#glimmer-as-stuff',\n        },\n        {\n          include: '#glimmer-supexp-content',\n        },\n      ],\n    },\n    'glimmer-expression-property': {\n      name: 'entity.expression.ember-handlebars',\n      begin: '({{~?)((@|this.)([a-zA-Z0-9_.-]+))',\n      end: '(~?}})',\n      captures: {\n        1: {\n          name: 'keyword.operator',\n        },\n        2: {\n          name: 'keyword.operator',\n        },\n        3: {\n          name: 'support.function',\n          patterns: [\n            {\n              name: 'variable.language',\n              match: '(@|this)',\n            },\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\.)+',\n            },\n          ],\n        },\n        4: {\n          name: 'support.function',\n          patterns: [\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\.)+',\n            },\n          ],\n        },\n      },\n      patterns: [\n        {\n          include: '#glimmer-supexp-content',\n        },\n      ],\n    },\n    'glimmer-expression': {\n      name: 'entity.expression.ember-handlebars',\n      begin: '({{~?)(([()\\\\s@a-zA-Z0-9_.-]+))',\n      end: '(~?}})',\n      captures: {\n        1: {\n          name: 'keyword.operator',\n        },\n        2: {\n          name: 'keyword.operator',\n        },\n        3: {\n          name: 'support.function',\n          patterns: [\n            {\n              name: 'string.regexp',\n              match: '[(]+',\n            },\n            {\n              name: 'string.regexp',\n              match: '[)]+',\n            },\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\.)+',\n            },\n            {\n              include: '#glimmer-supexp-content',\n            },\n          ],\n        },\n      },\n      patterns: [\n        {\n          include: '#glimmer-supexp-content',\n        },\n      ],\n    },\n    'glimmer-supexp-content': {\n      patterns: [\n        {\n          include: '#glimmer-subexp',\n        },\n        {\n          include: '#string-single-quoted-handlebars',\n        },\n        {\n          include: '#string-double-quoted-handlebars',\n        },\n        {\n          include: '#boolean',\n        },\n        {\n          include: '#digit',\n        },\n        {\n          include: '#param',\n        },\n        {\n          include: '#glimmer-parameter-name',\n        },\n        {\n          include: '#glimmer-parameter-value',\n        },\n      ],\n    },\n    'glimmer-control-expression': {\n      name: 'entity.expression.ember-handlebars',\n      begin: '({{~?)(([-a-zA-Z_0-9/]+)\\\\s)',\n      end: '(~?}})',\n      captures: {\n        1: {\n          name: 'keyword.operator',\n        },\n        2: {\n          name: 'keyword.operator',\n        },\n        3: {\n          name: 'keyword.control',\n        },\n      },\n      patterns: [\n        {\n          include: '#glimmer-supexp-content',\n        },\n      ],\n    },\n    'glimmer-subexp': {\n      name: 'entity.subexpression.ember-handlebars',\n      begin: '(\\\\()([@a-zA-Z0-9.-]+)',\n      end: '(\\\\))',\n      captures: {\n        1: {\n          name: 'keyword.other',\n        },\n        2: {\n          name: 'keyword.control',\n        },\n      },\n      patterns: [\n        {\n          include: '#glimmer-supexp-content',\n        },\n      ],\n    },\n    'as-keyword': {\n      name: 'keyword.control',\n      match: '\\\\s\\\\b(as)\\\\b(?=\\\\s\\\\|)',\n      patterns: [],\n    },\n    'as-params': {\n      name: 'keyword.block-params.ember-handlebars',\n      begin: '(?<!\\\\|)(\\\\|)',\n      beginCaptures: {\n        1: {\n          name: 'constant.other.symbol.begin.ember-handlebars',\n        },\n      },\n      end: '(\\\\|)(?!\\\\|)',\n      endCaptures: {\n        1: {\n          name: 'constant.other.symbol.end.ember-handlebars',\n        },\n      },\n      patterns: [\n        {\n          include: '#variable',\n        },\n      ],\n    },\n    'glimmer-parameter-value': {\n      match: '\\\\b([a-zA-Z0-9:_.-]+)\\\\b(?!=)',\n      captures: {\n        1: {\n          name: 'support.function',\n          patterns: [\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\.)+',\n            },\n          ],\n        },\n      },\n      patterns: [],\n    },\n    'glimmer-parameter-name': {\n      match: '\\\\b([a-zA-Z0-9_-]+)(\\\\s?=)',\n      captures: {\n        1: {\n          name: 'variable.parameter.name.ember-handlebars',\n        },\n        2: {\n          name: 'punctuation.definition.expression.ember-handlebars',\n        },\n      },\n      patterns: [],\n    },\n    variable: {\n      name: 'support.function',\n      match: '\\\\b([a-zA-Z0-9-_]+)\\\\b',\n      patterns: [],\n    },\n    style: {\n      begin: '(^[ \\\\t]+)?(?=<(?i:style)\\\\b(?!-))',\n      beginCaptures: {\n        1: {\n          name: 'punctuation.whitespace.embedded.leading.html',\n        },\n      },\n      end: '(?!\\\\G)([ \\\\t]*$\\\\n?)?',\n      endCaptures: {\n        1: {\n          name: 'punctuation.whitespace.embedded.trailing.html',\n        },\n      },\n      patterns: [\n        {\n          begin: '(?i)(<)(style)(?=\\\\s|/?>)',\n          beginCaptures: {\n            0: {\n              name: 'meta.tag.metadata.style.start.html',\n            },\n            1: {\n              name: 'punctuation.definition.tag.begin.html',\n            },\n            2: {\n              name: 'entity.name.tag.html',\n            },\n          },\n          end: '(?i)((<)/)(style)\\\\s*(>)',\n          endCaptures: {\n            0: {\n              name: 'meta.tag.metadata.style.end.html',\n            },\n            1: {\n              name: 'punctuation.definition.tag.begin.html',\n            },\n            2: {\n              name: 'source.css-ignored-vscode',\n            },\n            3: {\n              name: 'entity.name.tag.html',\n            },\n            4: {\n              name: 'punctuation.definition.tag.end.html',\n            },\n          },\n          name: 'meta.embedded.block.html',\n          patterns: [\n            {\n              begin: '\\\\G',\n              captures: {\n                1: {\n                  name: 'punctuation.definition.tag.end.html',\n                },\n              },\n              end: '(>)',\n              name: 'meta.tag.metadata.style.start.html',\n              patterns: [\n                {\n                  include: '#glimmer-argument',\n                },\n                {\n                  include: '#html-attribute',\n                },\n              ],\n            },\n            {\n              begin: '(?!\\\\G)',\n              end: '(?=</(?i:style))',\n              name: 'source.css',\n              patterns: [\n                {\n                  include: 'source.css',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    script: {\n      begin: '(^[ \\\\t]+)?(?=<(?i:script)\\\\b(?!-))',\n      beginCaptures: {\n        1: {\n          name: 'punctuation.whitespace.embedded.leading.html',\n        },\n      },\n      end: '(?!\\\\G)([ \\\\t]*$\\\\n?)?',\n      endCaptures: {\n        1: {\n          name: 'punctuation.whitespace.embedded.trailing.html',\n        },\n      },\n      patterns: [\n        {\n          begin: '(<)((?i:script))\\\\b',\n          beginCaptures: {\n            0: {\n              name: 'meta.tag.metadata.script.start.html',\n            },\n            1: {\n              name: 'punctuation.definition.tag.begin.html',\n            },\n            2: {\n              name: 'entity.name.tag.html',\n            },\n          },\n          end: '(/)((?i:script))(>)',\n          endCaptures: {\n            0: {\n              name: 'meta.tag.metadata.script.end.html',\n            },\n            1: {\n              name: 'punctuation.definition.tag.begin.html',\n            },\n            2: {\n              name: 'entity.name.tag.html',\n            },\n            3: {\n              name: 'punctuation.definition.tag.end.html',\n            },\n          },\n          name: 'meta.embedded.block.html',\n          patterns: [\n            {\n              begin: '\\\\G',\n              end: '(?=/)',\n              patterns: [\n                {\n                  begin: '(>)',\n                  beginCaptures: {\n                    0: {\n                      name: 'meta.tag.metadata.script.start.html',\n                    },\n                    1: {\n                      name: 'punctuation.definition.tag.end.html',\n                    },\n                  },\n                  end: '((<))(?=/(?i:script))',\n                  endCaptures: {\n                    0: {\n                      name: 'meta.tag.metadata.script.end.html',\n                    },\n                    1: {\n                      name: 'punctuation.definition.tag.begin.html',\n                    },\n                    2: {\n                      name: 'source.js-ignored-vscode',\n                    },\n                  },\n                  patterns: [\n                    {\n                      begin: '\\\\G',\n                      end: '(?=</(?i:script))',\n                      name: 'source.js',\n                      patterns: [\n                        {\n                          begin: '(^[ \\\\t]+)?(?=//)',\n                          beginCaptures: {\n                            1: {\n                              name: 'punctuation.whitespace.comment.leading.js',\n                            },\n                          },\n                          end: '(?!\\\\G)',\n                          patterns: [\n                            {\n                              begin: '//',\n                              beginCaptures: {\n                                0: {\n                                  name: 'punctuation.definition.comment.js',\n                                },\n                              },\n                              end: '(?=</script)|\\\\n',\n                              name: 'comment.line.double-slash.js',\n                            },\n                          ],\n                        },\n                        {\n                          begin: '/\\\\*',\n                          captures: {\n                            0: {\n                              name: 'punctuation.definition.comment.js',\n                            },\n                          },\n                          end: '\\\\*/|(?=</script)',\n                          name: 'comment.block.js',\n                        },\n                        {\n                          include: 'source.js',\n                        },\n                      ],\n                    },\n                  ],\n                },\n                {\n                  begin:\n                    '(?ix:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(?=\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype\\\\s*=\\\\s*\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(\\'|\"|)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttext/\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tx-handlebars\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  | (x-(handlebars-)?|ng-)?template\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  | html\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[\\\\s\"\\'>]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)',\n                  end: '((<))(?=/(?i:script))',\n                  endCaptures: {\n                    0: {\n                      name: 'meta.tag.metadata.script.end.html',\n                    },\n                    1: {\n                      name: 'punctuation.definition.tag.begin.html',\n                    },\n                    2: {\n                      name: 'text.html.basic',\n                    },\n                  },\n                  patterns: [\n                    {\n                      begin: '(?!\\\\G)',\n                      end: '(?=</(?i:script))',\n                      name: 'text.html.basic',\n                      patterns: [\n                        {\n                          include: 'text.html.basic',\n                        },\n                      ],\n                    },\n                  ],\n                },\n                {\n                  begin: '(?=(?i:type))',\n                  end: '(<)(?=/(?i:script))',\n                  endCaptures: {\n                    0: {\n                      name: 'meta.tag.metadata.script.end.html',\n                    },\n                    1: {\n                      name: 'punctuation.definition.tag.begin.html',\n                    },\n                  },\n                },\n                {\n                  include: '#string-double-quoted-html',\n                },\n                {\n                  include: '#string-single-quoted-html',\n                },\n                {\n                  include: '#glimmer-argument',\n                },\n                {\n                  include: '#html-attribute',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    'html-comment': {\n      name: 'comment.block.html.ember-handlebars',\n      begin: '<!--',\n      end: '--\\\\s*>',\n      captures: {\n        0: {\n          name: 'punctuation.definition.comment.html.ember-handlebars',\n        },\n      },\n      patterns: [\n        {\n          include: '#attention',\n        },\n        {\n          match: '--',\n          name: 'invalid.illegal.bad-comments-or-CDATA.html.ember-handlebars',\n        },\n      ],\n    },\n    'tag-like-content': {\n      patterns: [\n        {\n          include: '#glimmer-bools',\n        },\n        {\n          include: '#glimmer-unescaped-expression',\n        },\n        {\n          include: '#glimmer-comment-block',\n        },\n        {\n          include: '#glimmer-comment-inline',\n        },\n        {\n          include: '#glimmer-expression-property',\n        },\n        {\n          include: '#boolean',\n        },\n        {\n          include: '#digit',\n        },\n        {\n          include: '#glimmer-control-expression',\n        },\n        {\n          include: '#glimmer-expression',\n        },\n        {\n          include: '#glimmer-block',\n        },\n        {\n          include: '#string-double-quoted-html',\n        },\n        {\n          include: '#string-single-quoted-html',\n        },\n        {\n          include: '#glimmer-as-stuff',\n        },\n        {\n          include: '#glimmer-argument',\n        },\n        {\n          include: '#html-attribute',\n        },\n      ],\n    },\n    'component-tag': {\n      name: 'meta.tag.any.ember-handlebars',\n      begin: '(<\\\\/?)(@|this.)?([a-zA-Z0-9-_\\\\$:\\\\.]+)\\\\b',\n      beginCaptures: {\n        1: {\n          name: 'punctuation.definition.tag',\n        },\n        2: {\n          name: 'support.function',\n          patterns: [\n            {\n              name: 'variable.language',\n              match: '(@|this)',\n            },\n            {\n              name: 'punctuation.definition.tag',\n              match: '(\\\\.)+',\n            },\n          ],\n        },\n        3: {\n          name: 'entity.name.type',\n          patterns: [\n            {\n              include: '#glimmer-component-path',\n            },\n            {\n              name: 'markup.bold',\n              match: '(@|:|\\\\$)',\n            },\n          ],\n        },\n      },\n      end: '(\\\\/?)(>)',\n      endCaptures: {\n        1: {\n          name: 'punctuation.definition.tag',\n        },\n        2: {\n          name: 'punctuation.definition.tag',\n        },\n      },\n      patterns: [\n        {\n          include: '#tag-like-content',\n        },\n      ],\n    },\n    'html-tag': {\n      name: 'meta.tag.any.ember-handlebars',\n      begin: '(<\\\\/?)([a-z0-9-]+)(?!\\\\.|:)\\\\b',\n      beginCaptures: {\n        1: {\n          name: 'punctuation.definition.tag',\n        },\n        2: {\n          name: 'entity.name.tag.html.ember-handlebars',\n        },\n      },\n      end: '(\\\\/?)(>)',\n      endCaptures: {\n        1: {\n          name: 'punctuation.definition.tag',\n        },\n        2: {\n          name: 'punctuation.definition.tag',\n        },\n      },\n      patterns: [\n        {\n          include: '#tag-like-content',\n        },\n      ],\n    },\n    'glimmer-argument': {\n      match: '\\\\s(@[a-zA-Z0-9:_.-]+)(=)?',\n      captures: {\n        1: {\n          name: 'entity.other.attribute-name.ember-handlebars.argument',\n          patterns: [\n            {\n              name: 'markup.italic',\n              match: '(@)',\n            },\n          ],\n        },\n        2: {\n          name: 'punctuation.separator.key-value.html.ember-handlebars',\n        },\n      },\n    },\n    'html-attribute': {\n      match: '\\\\s([a-zA-Z0-9:_.-]+)(=)?',\n      captures: {\n        1: {\n          name: 'entity.other.attribute-name.ember-handlebars',\n          patterns: [\n            {\n              name: 'markup.bold',\n              match: '(\\\\.\\\\.\\\\.attributes)',\n            },\n          ],\n        },\n        2: {\n          name: 'punctuation.separator.key-value.html.ember-handlebars',\n        },\n      },\n    },\n    entities: {\n      patterns: [\n        {\n          name: 'constant.character.entity.html.ember-handlebars',\n          match: '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)',\n          captures: {\n            1: {\n              name: 'punctuation.definition.entity.html.ember-handlebars',\n            },\n            3: {\n              name: 'punctuation.definition.entity.html.ember-handlebars',\n            },\n          },\n        },\n        {\n          name: 'invalid.illegal.bad-ampersand.html.ember-handlebars',\n          match: '&',\n        },\n      ],\n    },\n  },\n};\n"],"names":["$schema","name","scopeName","fileTypes","patterns","include","repository","match","captures","begin","beginCaptures","end","endCaptures","boolean","digit","param","attention","variable","style","script","entities"],"mappings":"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"}